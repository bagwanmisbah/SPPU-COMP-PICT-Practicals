assgn no. 5

mysql> create table Stud_Marks (name varchar(50), total_marks int);
Query OK, 0 rows affected (0.03 sec)

INSERT INTO Stud_Marks (name, total_marks) VALUES ('Jay Chavhan', 1000);
INSERT INTO Stud_Marks (name, total_marks) VALUES ('Ram Yadav', 970);
INSERT INTO Stud_Marks (name, total_marks) VALUES ('Alisha Rathi', 880);
INSERT INTO Stud_Marks (name, total_marks) VALUES ('Seema Patel', 820);
INSERT INTO Stud_Marks (name, total_marks) VALUES ('Geeta Patil', 1100);

mysql> select * from Stud_Marks;
+--------------+-------------+
| name         | total_marks |
+--------------+-------------+
| Jay Chavhan  |        1000 |
| Ram Yadav    |         970 |
| Alisha Rathi |         880 |
| Seema Patel  |         820 |
| Geeta Patil  |        1100 |
+--------------+-------------+
5 rows in set (0.00 sec)
mysql> delimiter //
mysql> CREATE PROCEDURE categorize_students()
    -> BEGIN
    ->     DECLARE done INT DEFAULT 0;
    ->     DECLARE student_name VARCHAR(20);
    ->     DECLARE student_marks INT;
    ->
    ->     DECLARE cur CURSOR FOR SELECT name, total_marks FROM Stud_Marks;
    ->
    ->     DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
    ->
    ->     OPEN cur;
    ->
    ->     read_loop: LOOP
    ->         FETCH cur INTO student_name, student_marks;
    ->         IF done THEN
    ->             LEAVE read_loop;
    ->         END IF;
    ->         CALL proc_Grade(student_name, student_marks);
    ->     END LOOP;
    ->
    ->     CLOSE cur;
    -> END //
Query OK, 0 rows affected (0.01 sec)
INSERT INTO Stud_Marks (name, total_marks) VALUES ('Jay Chavhan', 1000);
INSERT INTO Stud_Marks (name, total_marks) VALUES ('Ram Yadav', 970);
INSERT INTO Stud_Marks (name, total_marks) VALUES ('Alisha Rathi', 880);
INSERT INTO Stud_Marks (name, total_marks) VALUES ('Seema Patel', 820);
INSERT INTO Stud_Marks (name, total_marks) VALUES ('Geeta Patil', 1100);


mysql> create table Result(roll int primary key auto_increment, name varchar(50), class varchar(20));
Query OK, 0 rows affected (0.03 sec)

mysql> DELIMITER //
mysql> CREATE PROCEDURE proc_Grade (
    ->     IN s_name VARCHAR(50),
    ->     IN s_total_marks INT
    -> )
    -> BEGIN
    ->     DECLARE s_class VARCHAR(20);
    ->     IF s_total_marks BETWEEN 990 AND 1500 THEN
    ->         SET s_class = 'Distinction';
    ->     ELSEIF s_total_marks BETWEEN 900 AND 989 THEN
    ->         SET s_class = 'First Class';
    ->     ELSEIF s_total_marks BETWEEN 825 AND 899 THEN
    ->         SET s_class = 'Higher Second Class';
    ->     ELSE
    ->         SET s_class = 'No Category';
    ->     END IF;
    ->     INSERT INTO Result ( Name, Class)
    ->     VALUES (s_name, s_class);
    -> END //
Query OK, 0 rows affected (0.01 sec)


mysql> delimiter //
mysql> CREATE PROCEDURE categorize_students()
    -> BEGIN
    ->     DECLARE done INT DEFAULT 0;
    ->     DECLARE student_name VARCHAR(20);
    ->     DECLARE student_marks INT;
    ->
    ->     DECLARE cur CURSOR FOR SELECT name, total_marks FROM Stud_Marks;
    ->
    ->     DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
    ->
    ->     OPEN cur;
    ->
    ->     read_loop: LOOP
    ->         FETCH cur INTO student_name, student_marks;
    ->         IF done THEN
    ->             LEAVE read_loop;
    ->         END IF;
    ->         CALL proc_Grade(student_name, student_marks);
    ->     END LOOP;
    ->
    ->     CLOSE cur;
    -> END //
Query OK, 0 rows affected (0.01 sec)

mysql> DELIMITER ;
mysql> CALL categorize_students();
Query OK, 0 rows affected (0.01 sec)

mysql> select * from Result;
+------+--------------+---------------------+
| roll | name         | class               |
+------+--------------+---------------------+
|    1 | Jay Chavhan  | Distinction         |
|    2 | Ram Yadav    | First Class         |
|    3 | Alisha Rathi | Higher Second Class |
|    4 | Seema Patel  | No Category         |
|    5 | Geeta Patil  | Distinction         |
+------+--------------+---------------------+
5 rows in set (0.00 sec)



create function proc_grade(s_name varchar(50), s_totalmarks int)
     returns varchar(20)
	reads sql data
     begin
     declare sclass varchar(20);
     declare m int;
     if s_totalmarks between 990 and 1500 then
     set sclass = "Distinction";
     elseif s_totalmarks between 900 and 989 then
     set sclass = "First Class";
     elseif s_totalmarks between 825 and 899 then
     set sclass = "Higher Second Class";
     else
     set sclass = "No class";
     end if;
     return sclass;
     end//
