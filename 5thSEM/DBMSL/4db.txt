Write a PL/SQL code block to calculate the area of a circle for a value of radius varying 
from 5 to 9. Store the radius and the corresponding values of calculated area in an empty 
table named areas, consisting of two columns, radius and area.

mysql> create table areas (sr int auto_increment primary key, radius float, area float);
Query OK, 0 rows affected (0.04 sec)

mysql> DELIMITER //
mysql>
mysql> CREATE PROCEDURE calArea()
    -> BEGIN
    ->     DECLARE radius FLOAT DEFAULT 5;
    ->     DECLARE area FLOAT;
    ->
    ->     -- Loop through radius values from 5 to 9
    ->     WHILE radius <= 9 DO
    ->         -- Calculate area of the circle
    ->         SET area := 3.142 * radius * radius;
    ->
    ->         -- Insert the radius and area into the areas table
    ->         INSERT INTO areas (radius, area) VALUES (radius, area);
    ->
    ->         -- Increment radius
    ->         SET radius := radius + 1;
    ->     END WHILE;
    -> END //
Query OK, 0 rows affected (0.02 sec)

mysql>
mysql> DELIMITER ;
mysql> select * from areas;
Empty set (0.00 sec)

mysql> CALL calArea();
Query OK, 1 row affected (0.03 sec)

mysql> select * from areas;
+----+--------+---------+
| sr | radius | area    |
+----+--------+---------+
|  1 |      5 |   78.55 |
|  2 |      6 | 113.112 |
|  3 |      7 | 153.958 |
|  4 |      8 | 201.088 |
|  5 |      9 | 254.502 |
+----+--------+---------+
5 rows in set (0.00 sec)

 Write a PL/SQL block of code for the following requirements:-
Schema:
Borrower(Rollin, Name, DateofIssue, NameofBook, Status)
Fine(Roll_no,Date,Amt)
 Accept roll_no & name of book from user.
 Check the number of days (from date of issue), if days are between 15 to 30 then fine amount will be  
        Rs 5per day.
 If no. of days>30, per day fine will be Rs 50 per day & for days less than 30, Rs. 5 per day.
 After submitting the book, status will change from I to R.
 If condition of fine is true, then details will be stored into fine table.


MariaDB > delimiter /
MariaDB > create procedure CalFine(IN roll_no int, IN bookName varchar(20))
    -> begin
    -> declare fine int default 0;
    -> declare days int default 0;
    -> declare d date;
    -> select dateOfIssue Into d from borrower where rollin = roll_no and book_name=bookname;
    -> set days = datediff (curdate(),d);
    -> if(days > 15 and days < 30)
    -> then 
    -> set fine = days*5;
    -> end if;
    -> if (days > 30) then 
    -> set fine = days*50;
    -> end if;
    -> insert into fine(roll_no, Date_Return, amt) values (roll_no, curdate(),fine);
    -> update borrower set status ='R' where rollin = roll_no and book_name = bookName;
    -> END;
    -> /
Query OK, 0 rows affected (0.056 sec)

mysql> create procedure CalculateFine(in p_roll int, in p_book_name varchar(50))
     begin
     declare days int;
     declare fine int default 0;
     declare date_of_issue date;
     declare vstatus char(1);
     if p_roll <= 0 then
     signal SQLSTATE '45000'
     SET MESSAGE_TEXT = 'Invalid roll number';
     end if;
     select DateOfIssue, Status into date_of_issue, vstatus from borrower where rollin = p_roll and NameOfBook = p_book_name;
     if vstatus = 'R' then
     signal SQLSTATE '45000'
     SET MESSAGE_TEXT = 'Book already returned';
     end if;
     set days = datediff(curdate(), date_of_issue);
     if days between 15 and 30 then
     set fine = (days-14) * 5;
     elseif days > 30 then
     set fine = (30-14)*5 + (days-30)*50;
     end if;
     update borrower set Status = 'R' where rollin = p_roll and NameOfBook = p_book_name;
     if fine > 0 then
     insert into fine(roll_no, Date, Amt) values(p_roll, CURDATE(), fine);
     end if;
     end //
Query OK, 0 rows affected (0.01 sec)
mysql> delimiter ;

mysql> select * from borrower;
+--------+--------+-------------+-------------------+--------+
| rollin | name   | dateOfIssue | book_name         | Status |
+--------+--------+-------------+-------------------+--------+
|    101 | Ramesh | 2024-07-17  | Atomic Habits     | I      |
|    102 | Rama   | 2024-07-27  | Lakshmikant       | I      |
|    103 | Saee   | 2024-07-07  | Spectrum Polity   | I      |
|    104 | Sahil  | 2024-06-17  | Shriman Yogi      | I      |
|    105 | Hari   | 2024-02-17  | Mrutyunjay        | R      |
|    106 | Seeta  | 2024-04-02  | Do Epic Shit Done | I      |
|    107 | Avani  | 2023-09-02  | Bakula            | I      |
+--------+--------+-------------+-------------------+--------+
7 rows in set (0.001 sec)

 call CalculateFine(105, "Mrutyunjay");
ERROR 1644 (45000): Book already returned
mysql> select * from Borrower;
+--------+--------+-------------+-------------------+--------+
| rollin | name   | DateOfIssue | NameOfBook        | Status |
+--------+--------+-------------+-------------------+--------+
|    101 | Ramesh | 2024-07-17  | Atomic Habits     | I      |
|    102 | Rama   | 2024-07-27  | Lakshmikant       | I      |
|    103 | Saee   | 2024-07-07  | Spectrum Polity   | I      |
|    104 | Sahil  | 2024-06-17  | Shriman Yogi      | I      |
|    105 | Hari   | 2024-02-17  | Mrutyunjay        | R      |
|    106 | Seeta  | 2024-04-02  | Do Epic Shit Done | I      |
|    107 | Avani  | 2023-09-02  | Bakula            | I      |
+--------+--------+-------------+-------------------+--------+
7 rows in set (0.00 sec)

mysql> call CalculateFine(101, "Atomic Habits");
Query OK, 1 row affected (0.01 sec)

mysql> select * from Borrower;
+--------+--------+-------------+-------------------+--------+
| rollin | name   | DateOfIssue | NameOfBook        | Status |
+--------+--------+-------------+-------------------+--------+
|    101 | Ramesh | 2024-07-17  | Atomic Habits     | R      |
|    102 | Rama   | 2024-07-27  | Lakshmikant       | I      |
|    103 | Saee   | 2024-07-07  | Spectrum Polity   | I      |
|    104 | Sahil  | 2024-06-17  | Shriman Yogi      | I      |
|    105 | Hari   | 2024-02-17  | Mrutyunjay        | R      |
|    106 | Seeta  | 2024-04-02  | Do Epic Shit Done | I      |
|    107 | Avani  | 2023-09-02  | Bakula            | I      |
+--------+--------+-------------+-------------------+--------+
7 rows in set (0.00 sec)

mysql> select * from Fine;
+---------+------------+------+
| roll_no | Date       | Amt  |
+---------+------------+------+
|     101 | 2024-08-26 |  580 |
+---------+------------+------+
1 row in set (0.00 sec)

mysql> call CalculateFine(-100, "Atomic Habits");
ERROR 1644 (45000): Invalid roll number
mysql>
